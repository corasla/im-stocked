[{"/Users/corasla/Desktop/learn/shoreline/client/src/index.tsx":"1","/Users/corasla/Desktop/learn/shoreline/client/src/reportWebVitals.ts":"2","/Users/corasla/Desktop/learn/shoreline/client/src/App.tsx":"3","/Users/corasla/Desktop/learn/shoreline/client/src/pages/MainPage.tsx":"4","/Users/corasla/Desktop/learn/shoreline/client/src/components/ChartWrapper.tsx":"5","/Users/corasla/Desktop/learn/shoreline/client/src/components/Chart.tsx":"6","/Users/corasla/Desktop/learn/shoreline/client/src/services/stocksClientService.tsx":"7"},{"size":500,"mtime":1611855505444,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611854154738,"results":"10","hashOfConfig":"9"},{"size":240,"mtime":1612199992544,"results":"11","hashOfConfig":"9"},{"size":5232,"mtime":1612295308493,"results":"12","hashOfConfig":"9"},{"size":1446,"mtime":1612291892628,"results":"13","hashOfConfig":"9"},{"size":2320,"mtime":1612291663743,"results":"14","hashOfConfig":"9"},{"size":487,"mtime":1612295463566,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1n2uc04",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/corasla/Desktop/learn/shoreline/client/src/index.tsx",[],["32","33"],"/Users/corasla/Desktop/learn/shoreline/client/src/reportWebVitals.ts",[],"/Users/corasla/Desktop/learn/shoreline/client/src/App.tsx",[],"/Users/corasla/Desktop/learn/shoreline/client/src/pages/MainPage.tsx",["34"],"/Users/corasla/Desktop/learn/shoreline/client/src/components/ChartWrapper.tsx",["35","36"],"import React, { useEffect, useState } from 'react'\nimport Chart from './Chart'\nconst moment = require('moment')\n\nexport default function ChartWrapper({data}) {\n  const [chartData, setChartData] = useState([])\n  const [meta, setMeta] = useState({})\n  useEffect(() => {\n    if (!data?.l?.length) {\n      return\n    }\n    const newChartData: any = [{\n      id: 'stockz',\n      color: \"hsl(53, 70%, 50%)\",\n      data: []\n    }]\n    let foundMax = Number.NEGATIVE_INFINITY\n    let foundMin = Number.POSITIVE_INFINITY\n    for (let i = 0; i < data.l.length; i++) {\n      const min = data.l[i]\n      const max = data.h[i]\n      const average = (min + max) / 2\n      if (max > foundMax) {\n        foundMax = max\n      }\n      if (min < foundMin) {\n        foundMin = min\n      }\n      const date = moment.unix(data.t[i]).format('YYYY-MM-DD')\n  \n      newChartData[0].data.push({\n        x: date,\n        y: average,\n      })\n    }\n\n    const totalLength = data.l.length\n    const diffBetweenMinAndMax = (foundMax-foundMin)\n    const newMeta = {\n      // max: foundMax,\n      // min: foundMin\n      // tickValues: [\n      //   data.t[0],\n      //   data.t[totalLength - 1],\n      // ]\n    }\n    setMeta(newMeta)\n    setChartData(newChartData)\n    console.log('another 111', newMeta, newChartData)\n  }, [data])\n  return (\n    <div>\n      {!data && <span>No data available</span>}\n      {data && <Chart data={chartData} meta={meta}></Chart>}\n    </div>\n  )\n}","/Users/corasla/Desktop/learn/shoreline/client/src/components/Chart.tsx",[],"/Users/corasla/Desktop/learn/shoreline/client/src/services/stocksClientService.tsx",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":52,"column":6,"nodeType":"44","endLine":52,"endColumn":8,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":37,"column":11,"nodeType":"48","messageId":"49","endLine":37,"endColumn":22},{"ruleId":"46","severity":1,"message":"50","line":38,"column":11,"nodeType":"48","messageId":"49","endLine":38,"endColumn":31},{"ruleId":"51","severity":1,"message":"52","line":11,"column":1,"nodeType":"53","endLine":13,"endColumn":2},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStockInformation'. Either include it or remove the dependency array.","ArrayExpression",["56"],"@typescript-eslint/no-unused-vars","'totalLength' is assigned a value but never used.","Identifier","unusedVar","'diffBetweenMinAndMax' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [getStockInformation]",{"range":"59","text":"60"},[2005,2007],"[getStockInformation]"]